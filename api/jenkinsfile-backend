Jenkins file
pipeline {
    agent {
        label 'docker'
    }

environment {

    DOCKERHUB_CREDENTIALS = credentials('dockeruser')
    registry = 'akhiltejs87/backend-lms'
    registryCredential = 'dockeruser'
    docker image = ''

}

stages {

    stage('building the docker image') {
        steps {
            sh 'cd api && docker build -t akhilteja87/backend-lms .'
        }
    }

    stage('login to docker hub account') {
        steps {
            sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'     
        }
    }

    stage('pushing the docker image to docker hub') {
        steps {
            sh 'docker push akhilteja87/backend-lms'
        }
    }

    stage('remove old docker image') {
        steps {
            sh 'docker rmi -f akhilteja87/backend-lms'
        }
    }

    stage('creating the database container') {
        steps {
          
            sh 'docker container run -d -p 5432:5432 --network lmsnetwork -e POSTGRES_PASSWORD=password --name lmsdb postgres'
        }
    }

    stage('creating the docker backend container') {
        steps {
            
            sh 'docker container run -d -p 8080:8080 --network lmsnetwork -e DATABASE_URL=postgresql://postgres:password@lmsdb:5432/postgres --name backend-lms -e PORT=8080 -e MODE=local akhilteja87/backend-lms'
            
        }
    }
  }
}

